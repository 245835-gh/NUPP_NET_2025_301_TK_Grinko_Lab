// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCare.Infrastructure;

#nullable disable

namespace PetCare.Infrastructure.Migrations
{
    [DbContext(typeof(PetCareContext))]
    [Migration("20250528093835_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PetCare.Infrastructure.Models.AnimalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Animal", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PetCare.Infrastructure.Models.OwnerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("PetCare.Infrastructure.Models.DogModel", b =>
                {
                    b.HasBaseType("PetCare.Infrastructure.Models.AnimalModel");

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Dog", (string)null);
                });

            modelBuilder.Entity("PetCare.Infrastructure.Models.AnimalModel", b =>
                {
                    b.HasOne("PetCare.Infrastructure.Models.OwnerModel", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PetCare.Infrastructure.Models.DogModel", b =>
                {
                    b.HasOne("PetCare.Infrastructure.Models.AnimalModel", null)
                        .WithOne()
                        .HasForeignKey("PetCare.Infrastructure.Models.DogModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetCare.Infrastructure.Models.OwnerModel", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
